{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","createStyles","button","backgroundColor","color","fontWeight","marginLeft","padding","App","useState","items","setItems","inputValue","setInputValue","handleSubmit","e","preventDefault","newItem","text","selected","newItems","pickRandomItem","randomItem","Math","floor","random","length","map","item","classes","className","onSubmit","type","placeholder","value","onChange","target","Button","variant","onClick","index","onDoubleClick","i","filter","removeItem","key","setTimeout","style","marginBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAKMA,G,MAAYC,aAAW,kBAC3BC,YAAa,CACXC,OAAQ,CACNC,gBAAiB,UACjBC,MAAO,OACPC,WAAY,IACZC,WAAY,EACZC,QAAS,SAgIAC,MA3Hf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEuBF,mBAAS,IAFhC,mBAENG,EAFM,KAEMC,EAFN,KAIPC,EAAe,SAACC,GAGpB,GAFAA,EAAEC,iBAEiB,KAAfJ,EAAmB,CACrB,IAAMK,EAAU,CACdC,KAAMN,EACNO,UAAU,GAENC,EAAQ,sBAAOV,GAAP,CAAcO,IAE5BJ,EAAc,IACdF,EAASS,KA0BPC,EAAiB,WACrB,IAAMC,EAAaZ,EAAMa,KAAKC,MAAMD,KAAKE,SAAWf,EAAMgB,SAEpDN,EAAWV,EAAMiB,KAAI,SAACC,GAAD,OACzBA,IAASN,EAAT,2BACSM,GADT,IACeT,UAAU,IADzB,2BAESS,GAFT,IAEeT,UAAU,OAG3BR,EAASS,IASLS,EAAU9B,IAEhB,OACE,6BAAS+B,UAAU,WACjB,yBAAKA,UAAU,SACb,wBAAIA,UAAU,cAAd,kBACA,wBAAIA,UAAU,YAAd,uDAGF,yBAAKA,UAAU,OACb,0BAAMC,SAAUjB,GACd,yBAAKgB,UAAU,kBACb,2BACEA,UAAU,QACVE,KAAK,OACLC,YAAY,+DACZC,MAAOtB,EACPuB,SAAU,SAACpB,GACTF,EAAcE,EAAEqB,OAAOF,UAG3B,kBAACG,EAAA,EAAD,CACEP,UAAWD,EAAQ3B,OACnBoC,QAAQ,YACRC,QAASzB,GAHX,kBASJ,wBAAIgB,UAAU,kBACXpB,EAAMiB,KAAI,SAACC,EAAMY,GAAP,OACT,wBACEV,UAAS,oBAAeF,EAAKT,SAAW,WAAa,IACrDsB,cAAe,kBAxCR,SAACC,GAClB,IAAMtB,EAAWV,EAAMiC,QAAO,SAACf,EAAMY,GAAP,OAAiBA,IAAUE,KAEzD/B,EAASS,GAqCsBwB,CAAWJ,IAChCK,IAAKL,GAEJZ,EAAKV,UAKXR,EAAMgB,OAAS,GACd,oCACE,kBAACW,EAAA,EAAD,CACEE,QArFM,WAChB,IAAK,IAAIG,EAAI,EAAGA,EAAI,GAAIA,IACtBI,WAAWzB,EAAgB,IAAMqB,IAoFzBZ,UAAWD,EAAQ3B,OACnBoC,QAAQ,YACRS,MAAO,CACL5C,gBAAiB,UACjB6C,aAAc,MACdzC,QAAS,WAPb,gBAYA,8IChIZ0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.45ac7707.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport './App.css';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    button: {\n      backgroundColor: '#e84566',\n      color: '#Fff',\n      fontWeight: 600,\n      marginLeft: 5,\n      padding: 2,\n    },\n  })\n);\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue !== '') {\n      const newItem = {\n        text: inputValue,\n        selected: false,\n      };\n      const newItems = [...items, newItem];\n\n      setInputValue('');\n      setItems(newItems);\n    }\n  };\n\n  const randomize = () => {\n    for (let i = 0; i < 30; i++) {\n      setTimeout(pickRandomItem, 100 * i);\n    }\n  };\n\n  // 10秒待ってから決定する処理\n  // const wait = (sec) => {\n  //   return new Promise((resolve, reject) => {\n  //     setTimeout(resolve, sec * 1000);\n  //   });\n  // };\n\n  // const randomize = async () => {\n  //   try {\n  //     await wait(10);\n  //     pickRandomItem();\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  const pickRandomItem = () => {\n    const randomItem = items[Math.floor(Math.random() * items.length)];\n\n    const newItems = items.map((item) =>\n      item === randomItem\n        ? { ...item, selected: true }\n        : { ...item, selected: false }\n    );\n\n    setItems(newItems);\n  };\n\n  const removeItem = (i) => {\n    const newItems = items.filter((item, index) => index !== i);\n\n    setItems(newItems);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <section className=\"section\">\n      <div className=\"title\">\n        <h1 className=\"main-title\">Decision Maker</h1>\n        <h2 className=\"subtitle\">決断はPCに任せよう</h2>\n      </div>\n\n      <div className=\"box\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-container\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"やることを追加しよう\"\n              value={inputValue}\n              onChange={(e) => {\n                setInputValue(e.target.value);\n              }}\n            />\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              onClick={handleSubmit}\n            >\n              追加\n            </Button>\n          </div>\n        </form>\n        <ul className=\"item-container\">\n          {items.map((item, index) => (\n            <li\n              className={`list-item ${item.selected ? 'decision' : ''}`}\n              onDoubleClick={() => removeItem(index)}\n              key={index}\n            >\n              {item.text}\n            </li>\n          ))}\n        </ul>\n\n        {items.length > 0 && (\n          <>\n            <Button\n              onClick={randomize}\n              className={classes.button}\n              variant=\"contained\"\n              style={{\n                backgroundColor: '#239a90',\n                marginBottom: '5px',\n                padding: '0 60px',\n              }}\n            >\n              決定\n            </Button>\n            <small>*ダブルクリックで選択肢を減らせます</small>\n          </>\n        )}\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}